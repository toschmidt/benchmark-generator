import argparse
import sys

from .benchmark import generate_benchmark
from .schema import generate_schema


def parse_arguments():
    parser = argparse.ArgumentParser(description='Generator Benchmark')
    parser.add_argument('-b', '--benchmark', action='store_true', help='generate a benchmark from the given input file')
    parser.add_argument('-s', '--schema', action='store_true',
                        help='generate the json schema for the benchmarks from the given input file')
    parser.add_argument('-e', '--execute', help='execute ')
    parser.add_argument('--input', type=str, help='json input file for generating the schema or the benchmark')
    parser.add_argument('--output', type=str, help='path to the cpp or json schema output file')
    parser.add_argument('--build', type=str, help='build directory generated by cmake')
    return parser.parse_args()


def main():
    args = parse_arguments()

    if args.schema:
        generate_schema(args.input, args.output)
    elif args.benchmark:
        generate_benchmark(args.input, args.output)
    else:
        raise Exception('no action given')


if __name__ == '__main__':
    sys.exit(main())
